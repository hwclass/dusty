{"version":3,"file":"dusty-1.3.2.mjs","sources":["../src/main.js"],"sourcesContent":["/*!\n * dusty : A small library-like DOM traversing tool\n *\n * Copyright (c) 2014 Barış Güler\n * http://hwclass.github.io\n *\n * Licensed under MIT\n * http://www.opensource.org/licenses/mit-license.php\n *\n * Launch  : October 2014\n * Version : 1.3.2\n * Released: 2015\n *\n */\n\n'use strict';\n\nconst event = require('event');\n\nconst dusty = ((global, document, undefined) => {\n\n  const config = {\n    messages : {\n      selectorCriteriaError : 'There is no any element specified.',\n      noMarkupCode : 'There is no any markup code specified.'\n    }\n  };\n\n  const add = {\n    event: event\n  }\n\n  const remove = {\n\n    /**\n     * byId() : The method removes a DOM element specified id as an argument.\n     *\n     * @param {string} id\n    */\n    byId: (id) => {\n      return element.parentNode.removeChild(document.getElementById(id));\n    },\n\n    /**\n     * byId() : The method removes a DOM element specified class as an argument.\n     *\n     * @param {HTMLElement} nodes\n     * @param {string} className\n    */\n    byClass: (nodes, className) => {\n      return document.getElementsByClassName(className).remove();\n    },\n\n    /**\n     * withTagName() : The method removes a DOM element specified tag names as an argument.\n     *\n     * @param {string} tagName\n    */\n    withTagName: (tagName) => {\n      return document.getElementsByTagName(tagName).remove();\n    },\n\n    /**\n     * all() : The method removes the whole DOM element's content given in an array\n     *\n     * @param {HTMLElement} nodes\n    */\n    all: (nodes) => {\n      for (let counterForNodes = 0, len = nodes.length; counterForNodes < len; counterForNodes++) {\n        if (nodes[counterForNodes]) {\n          nodes[counterForNodes].parentNode.removeChild(nodes[counterForNodes]);\n        }\n      }\n    }\n\n  };\n\n  const ajax = {\n\n    /**\n     * request() : The method removes the whole DOM element's content given in an array\n     *\n     * @param {string} method\n     * @param {string} url\n     * @param {object} data\n     * @param {function} callback\n    */\n    request: (method, url, data, callback) => {\n      let xhrReq,\n          returnedData = null,\n          postData = null,\n          transferComplete = () => {\n            return true;\n          };\n      if (window.XMLHttpRequest) {\n        xhrReq = new XMLHttpRequest();\n      } else {\n        xhrReq = new ActiveXObject(\"Microsoft.XMLHTTP\");\n      }\n      xhrReq.addEventListener(\"load\", transferComplete, false);\n      xhrReq.onreadystatechange = () => {\n        if (xhrReq.readyState == 4 && xhrReq.status == 200) {\n          callback(xhrReq.responseText);\n        }\n      }\n      xhrReq.open(method, url, true);\n      if (method === 'POST') {\n        postData = data\n      }\n      xhrReq.send(postData);\n    }\n\n  };\n\n  const get = {\n\n    /**\n     * byId() : The method fetches a DOM element specified id as an argument.\n     *\n     * @param {string} id\n    */\n    byId: (id) => {\n      return document.getElementById(id);\n    },\n\n    /**\n     * byId() : The method gets a DOM element specified class as an argument.\n     *\n     * @param {HTMLElement} nodes\n     * @param {string} className\n    */\n    byClass: (className) => {\n      let elements = document.getElementsByClassName(className);\n      return (elements.length===0?undefined:elements);\n    },\n\n    /**\n     * withTagName() : The method gets a DOM element specified tag names as an argument.\n     *\n     * @param {string} tagName\n    */\n    withTagName: (tagName) => {\n      var elements = document.getElementsByTagName(tagName);\n      return (elements.length===0?undefined:elements);\n    }\n\n  };\n\n  var set = {\n\n    /**\n     * value() : The method sets the value of the specified DOM element.\n     *\n     * @param {HTMLElement} element\n     * @param {string} val\n    */\n    value: (element, val) => {\n      if(element.tagName && element.tagName.toLowerCase() === \"textarea\" || element.tagName.toLowerCase() === \"input\") {\n        element.value = val;\n      } else {\n        element.innerHTML = val;\n      }\n    },\n\n    /**\n     * HTML() : The method sets the HTML value of the specified DOM element.\n     *\n     * @param {HTMLElement} element\n     * @param {string} markup\n    */\n    HTML: (element, markup) => {\n      let el = element,\n          result = false;\n      if (typeof el !== \"undefined\" && el !== null) {\n        if (!dusty.utils.isUndefined(el) && !dusty.utils.isNull(el)) {\n          el.innerHTML = markup;\n        }\n      } else {\n        result = dusty.config.messages.selectorCriteriaError;\n      }\n      return (dusty.utils.isUndefined(result) || dusty.utils.isNull(result) ? console.log(result) : undefined);\n    },\n\n    /**\n     * attr() : The method sets the HTML attribute of the specified DOM element.\n     *\n     * @param {string} id\n     * @param {string} attribute\n     * @param {string} value\n    */\n    attr: function (id, attribute, value) {\n      document.getElementById(id).setAttribute(attribute, value);\n    }\n\n  };\n\n  const has = {\n\n    /**\n     * class() : The method checks if the HTML element has the specified class name or not.\n     *\n     * @param {HTMLElement} node\n     * @param {string} className\n    */\n    class: (node, className) => {\n      return (\" \" + node.className.split(/\\s+/g).join(\" \") + \" \").indexOf(\" \" + className + \" \") > -1;\n    }\n\n  };\n\n  const utils = {\n    \n    /**\n     * isUndefined() : The method checks if specified obj is undefined or not.\n     *\n     * @param {object} obj\n    */\n    isUndefined : (obj) => {\n      return (typeof obj === 'undefined');\n    },\n\n    /**\n     * isNull() : The method checks if specified obj is null or not.\n     *\n     * @param {object} obj\n    */\n    isNull: (obj) => {\n      return obj === null;\n    },\n\n    /**\n     * isEmptyString() : The method checks if specified arguement is an empty string or not.\n     *\n     * @param {object} obj\n    */\n    isEmptyString: (obj) => {\n      return (obj === '');\n    }\n    \n  };\n\n  return {\n    config : config,\n    get : get,\n    set : set,\n    add : add,\n    remove : remove,\n    ajax : ajax,\n    utils : utils\n  };\n\n})(window, document);\n\nmodule.exports = (dusty || {});\n"],"names":[],"mappings":"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"}